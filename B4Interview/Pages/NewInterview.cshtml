@page
@model B4Interview.Pages.NewInterviewModel
@{
    ViewData["Title"] = "NewInterview";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<h5 class="p-3">Write your Interview Experience</h5>
<div class="card w-75">
    <div class="card-body small">
        <form method="post">
            <div class="form-group">
                <label>Company Name</label>
                @if (Model.Candidate?.Employer != null)
                {
                    <input type="text" value="@Model.Candidate.Employer.Name" class="form-control typeahead w-50" name="Input.Company" id="companySearch" required>
                }
                else
                {
                    <input type="text" class="form-control typeahead w-50" name="Input.Company" id="companySearch" required>
                }
            </div>
            <div class="form-group">
                <label>Job Title</label>
                <input type="text" class="form-control w-50" name="Input.Title" required>
            </div>
            <div class="form-group">
                <label>Experience</label>
                <input type="text" class="form-control w-25" name="Input.Experience" required>
            </div>
            <div class="form-group">
                <label>Location</label>
                <input type="text" class="form-control w-50" name="Input.Location" required>
            </div>
            <div class="form-group">
                <label>Detail</label>
                <textarea rows="2" type="text" class="form-control w-75" name="Input.Description"></textarea>
            </div>

            <div class="row">
                <div class="col-2">
                    <button class="btn btn-sm btn-outline-primary" onclick="addRound()"><i class="fas fa-plus"></i> Add Round</button>
                </div>
            </div>
            <br />

            <div class="row" id="rounds">
            </div>

            <div class="col-12 d-none" id="roundTmpl">
                <div class="card bg-light">
                    <div class="card-body">
                        <div class="row">
                            <div class="offset-9 col-3">
                                <label>Select Round</label>
                                <select name="Input.Rounds.Type" class="form-control form-control-sm">
                                    @foreach (RoundType roundType in Enum.GetValues(typeof(RoundType)))
                                    {
                                        <option value="@((short)roundType)">@roundType.ToString()</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <label>Round Overview</label>
                                <textarea class="form-control w-75" name="Input.Rounds.Desc" rows="2"></textarea>
                            </div>
                        </div>
                        <div id="questions">
                            <br />
                            <div class="card">
                                <div class="card-header">
                                    <ul class="nav nav-pills float-right card-header-pills">
                                        <li class="nav-item">
                                            <a class="nav-link active" style="cursor:pointer" onclick="addQuestion(this)">Add</a>
                                        </li>
                                    </ul>
                                    <h6 class="card-title"> Questions</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-9">
                                            <textarea rows="2" class="form-control" name="Input.Rounds.Questions[0].Question"></textarea>
                                        </div>
                                        <div class="col-3">
                                            <input type="text" class="form-control typeahead" placeholder="Skill" id="skillSearch" name="Input.Rounds.Questions[0].Skill" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row mb-3 d-none" id="qTmpl">
                <div class="col-9">
                    <textarea rows="2" class="form-control" name="Input.Rounds.Questions[0].Question"></textarea>
                </div>
                <div class="col-3">
                    <input type="text" class="form-control" placeholder="Skill" id="skillSearch" name="Input.Rounds.Questions[0].Skill" />
                </div>
            </div>
            <br />
            <div class="form-group">
                <label>Source</label>
                <select name="Input.Source" class="form-control w-25 form-control-sm">
                    @foreach (InterviewSource source in Enum.GetValues(typeof(InterviewSource)))
                    {
                        <option value="@((short)source)">@source.ToString()</option>
                    }
                </select>
            </div>
            <br />
            <div class="form-group">
                <button type="submit" class="btn btn-primary float-right">Save Interview</button>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script>
        var roundsCount = 0;
        function addRound() {
            event.preventDefault();

            var clone = $('#roundTmpl').clone().removeClass('d-none').removeAttr("id");
            //clone.find('#skillSearch').addClass('typeahead');
            clone.find('[name^="Input.Rounds"]').each(function () {
                let elem = $(this);
                elem.attr("name", elem.attr('name').replace('Input.Rounds', 'Input.Rounds[' + roundsCount + ']'));
            });

            clone.find('.nav-link').attr('onclick', 'addQuestion(this,' + roundsCount + ')')

            $('#rounds').append(clone);
            roundsCount++;

            skillsTypeahead();
        }

        function addQuestion(element, roundIndex) {
            event.preventDefault();
            var clone = $('#qTmpl').clone().removeClass('d-none').removeAttr("id");
            clone.find('#skillSearch').addClass('typeahead');
            var target = $(element).parents('.card:eq(0)').find('.card-body');
            let quesCount = target.find('textarea').length;
            clone.find('[name*="Questions[0]"]').each(function () {
                $(this).attr('name', $(this).attr('name').replace('Input.Rounds.Questions[0]', 'Input.Rounds[' + roundIndex + '].Questions[' + quesCount + ']'));
            });
            target.append(clone);
        }
    </script>
}